#!/bin/bash

# =================================================================
#        Installer Final Hokage-BOT (Versi Sinkronisasi GitHub v2)
# =================================================================
#
# Diperbaiki untuk mengatasi masalah 'externally-managed-environment'
# dan meningkatkan keandalan instalasi.

# --- Konfigurasi ---
REPO_URL="https://github.com/hokagelegend9999/Telegram-bot.git"
APP_DIR="/opt/hokage-bot"
SERVICE_FILE="/etc/systemd/system/hokage-bot.service"
SUDOERS_FILE="/etc/sudoers.d/hokage-bot"

# --- Warna ---
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

# --- Fungsi ---

check_root() {
    if [ "$(id -u)" -ne 0 ]; then
        echo -e "${RED}Error: Skrip ini harus dijalankan sebagai root.${NC}"
        exit 1
    fi
}

show_header() {
    clear
    echo -e "${GREEN}=====================================================${NC}"
    echo -e "${GREEN}==        Installer Final Hokage-BOT (GitHub Sync)   ==${NC}"
    echo -e "${GREEN}=====================================================${NC}"
    echo
}

# FASE 1: Pembersihan Total
run_cleanup() {
    echo -e "${YELLOW}--- FASE 1: Menghapus Instalasi Lama ---${NC}"
    
    # Pindah ke direktori aman (seperti /root) sebelum menghapus apa pun
    cd /root || { echo -e "${RED}Gagal pindah ke direktori /root.${NC}"; exit 1; }

    echo "> Menghentikan layanan bot yang mungkin berjalan..."
    systemctl stop hokage-bot.service > /dev/null 2>&1
    systemctl disable hokage-bot.service > /dev/null 2>&1

    echo "> Menghapus direktori, layanan, dan file izin lama..."
    rm -rf "$APP_DIR"
    rm -f "$SERVICE_FILE"
    rm -f "$SUDOERS_FILE"
    
    echo "> Memuat ulang konfigurasi systemd..."
    systemctl daemon-reload
    echo -e "${GREEN}✓ Pembersihan selesai.${NC}"
    echo
}

# FASE 2: Instalasi dari Awal
run_install() {
    echo -e "${YELLOW}--- FASE 2: Membangun Ulang dari GitHub ---${NC}"

    # 1. Meminta Kredensial
    read -p "Masukkan Token Bot Telegram Anda: " BOT_TOKEN
    read -p "Masukkan ID Telegram Admin Anda (hanya angka): " ADMIN_ID
    if [ -z "$BOT_TOKEN" ] || [ -z "$ADMIN_ID" ]; then
        echo -e "${RED}Error: Token/ID tidak boleh kosong.${NC}"; exit 1;
    fi
    echo

    # 2. Instal Dependensi Sistem
    echo "> Menginstal dependensi sistem..."
    # Perbaikan: Menginstal MariaDB Server, Python Virtual Environment, dan paket lain
    # dalam satu perintah 'apt' untuk menghindari error dan memastikan semua dependensi
    # terinstal sebelum langkah selanjutnya.
    apt-get update
    apt-get install -y git python3-venv python3-pip jq at mariadb-server
    if [ $? -ne 0 ]; then
        echo -e "${RED}GAGAL: Tidak bisa menginstal dependensi sistem. Mohon periksa koneksi internet atau repository Anda.${NC}"
        exit 1
    fi
    echo -e "${GREEN}✓ Dependensi sistem terinstal.${NC}"
    
    # Tambahan: Amankan instalasi MariaDB jika diperlukan, atau buat pengguna dan database khusus
    # mariadb_secure_installation_command
    # mysql -u root -e "CREATE USER 'hokagebot'@'localhost' IDENTIFIED BY 'password';"
    # mysql -u root -e "GRANT ALL PRIVILEGES ON nama_database.* TO 'hokagebot'@'localhost';"

    # 3. Clone Repositori dari GitHub
    echo "> Mengunduh semua file terbaru dari repositori Anda..."
    mkdir -p "$APP_DIR"
    git clone "$REPO_URL" "$APP_DIR"
    if [ $? -ne 0 ]; then
        echo -e "${RED}GAGAL: Tidak bisa mengunduh repositori. Pastikan URL repositori benar dan koneksi internet stabil.${NC}"; exit 1;
    fi
    echo -e "${GREEN}✓ Semua file berhasil diunduh.${NC}"

    # 4. Membuat File Konfigurasi (config.py)
    echo "> Membuat file konfigurasi (config.py)..."
    cat <<EOF > "${APP_DIR}/config.py"
# Dibuat otomatis oleh installer
BOT_TOKEN = "${BOT_TOKEN}"
ADMIN_TELEGRAM_ID = ${ADMIN_ID}
EOF
    echo -e "${GREEN}✓ File config.py berhasil dibuat.${NC}"

    # 5. Menyiapkan Lingkungan Python
    echo "> Menyiapkan virtual environment & menginstal library..."
    # Perbaikan: Semua instalasi paket Python dilakukan di dalam virtual environment.
    # Ini adalah solusi untuk error 'externally-managed-environment'.
    python3 -m venv "${APP_DIR}/venv"
    source "${APP_DIR}/venv/bin/activate"
    
    # Perbaikan: Menggabungkan semua instalasi pip ke dalam virtual environment.
    # Jika requirements.txt sudah berisi 'mysql-connector-python', baris ini bisa dihapus.
    pip install -r "${APP_DIR}/requirements.txt"
    pip install mysql-connector-python
    
    deactivate
    if [ $? -ne 0 ]; then
        echo -e "${RED}GAGAL: Tidak bisa menginstal library Python. Pastikan requirements.txt ada dan tidak ada kesalahan sintaks.${NC}"
        exit 1
    fi
    echo -e "${GREEN}✓ Lingkungan Python siap.${NC}"
    
    # 6. Mengatur Izin
    echo "> Memberikan izin eksekusi & sudo..."
    chmod +x ${APP_DIR}/*.sh
    echo "root ALL=(ALL) NOPASSWD: ${APP_DIR}/*.sh" > "$SUDOERS_FILE"
    chmod 440 "$SUDOERS_FILE"
    echo -e "${GREEN}✓ Izin berhasil dikonfigurasi.${NC}"

    # 7. Membuat dan Mengaktifkan Layanan Systemd
    echo "> Membuat file layanan systemd..."
    cat <<EOF > ${SERVICE_FILE}
[Unit]
Description=Hokage-BOT Service (GitHub Version)
After=network.target
[Service]
User=root
Group=root
WorkingDirectory=${APP_DIR}
ExecStart=${APP_DIR}/venv/bin/python3 main.py
Restart=always
RestartSec=5
[Install]
WantedBy=multi-user.target
EOF

    echo "> Mengaktifkan dan memulai layanan bot..."
    systemctl daemon-reload
    systemctl enable hokage-bot.service
    systemctl start hokage-bot.service
    # Cek status layanan untuk memastikan bot berhasil dijalankan
    sleep 5
    if systemctl is-active --quiet hokage-bot.service; then
        echo -e "${GREEN}✓ Layanan bot berhasil dibuat dan dijalankan.${NC}"
    else
        echo -e "${RED}GAGAL: Layanan bot tidak dapat dimulai. Periksa log dengan 'journalctl -u hokage-bot.service'.${NC}"
        exit 1
    fi
}

# --- EKSEKUSI UTAMA ---
check_root
show_header
run_cleanup
run_install

echo
echo -e "${GREEN}=====================================================${NC}"
echo -e "${GREEN}==           INSTALASI BERHASIL SELESAI            ==${NC}"
echo -e "${GREEN}=====================================================${NC}"
echo
echo "Selamat! Bot Anda sekarang berjalan."
echo -e "Untuk memeriksa status, gunakan: ${YELLOW}systemctl status hokage-bot.service${NC}"
